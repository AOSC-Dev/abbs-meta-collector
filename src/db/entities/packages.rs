//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "packages")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub name: String,
    pub tree: String,
    pub category: String,
    pub section: String,
    pub pkg_section: String,
    pub directory: String,
    pub description: String,
    pub spec_path: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::package_dependencies::Entity")]
    PackageDependencies,
    #[sea_orm(has_many = "super::package_spec::Entity")]
    PackageSpec,
}

impl Related<super::package_dependencies::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PackageDependencies.def()
    }
}

impl Related<super::package_spec::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PackageSpec.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
